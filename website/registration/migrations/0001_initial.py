# Generated by Django 3.0.7 on 2020-07-12 18:56

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import website.registration.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('full_name', models.CharField(max_length=180)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('phone_number', models.CharField(blank=True, max_length=16)),
                ('department', models.CharField(choices=[('CSE', 'Cse'), ('EEE', 'Eee'), ('ETE', 'Ete'), ('PHM', 'Phm')], default='CSE', max_length=3)),
                ('designation', models.CharField(blank=True, max_length=256, null=True, verbose_name='designation')),
                ('qualification', models.CharField(blank=True, max_length=512, null=True, verbose_name='qualification')),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to=website.registration.models.generate_propic_upload_location)),
                ('cv_document', models.FileField(blank=True, null=True, upload_to=website.registration.models.generate_cv_upload_location)),
                ('is_teacher', models.BooleanField(default=False, help_text='Designates whether this user should be treated as teacher.', verbose_name='teacher status')),
                ('is_external', models.BooleanField(default=False, help_text='Designates whether this teacher should be treated as an external teacher.')),
                ('is_student', models.BooleanField(default=False, help_text='Designates whether this user should be treated as student.', verbose_name='student status')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_marks', models.PositiveSmallIntegerField(default=0)),
                ('student', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Mark',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mark', models.PositiveSmallIntegerField()),
                ('remarks', models.TextField(blank=True)),
                ('graded_by', models.ForeignKey(limit_choices_to={'is_teacher': True}, on_delete=django.db.models.deletion.CASCADE, related_name='graded_by_marks', to=settings.AUTH_USER_MODEL)),
                ('student', models.ForeignKey(limit_choices_to={'is_student': True}, on_delete=django.db.models.deletion.CASCADE, related_name='student_marks', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'default_related_name': 'marks',
            },
        ),
    ]
